---
- name: Desplegar Drupal
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    # Versión de Drupal a instalar. Puedes cambiarla fácilmente aquí.
    drupal_version: "10.3.0"
    web_user: "apache"
    # La ruta base correcta que establecimos
    base_dir: "/var/www/html/proyecto_web/userscms/{{ usuario_id }}/{{ cms }}_{{ salt }}"

  tasks:
    # --- Las tareas de base de datos son idénticas ---
    - name: 1. Crear la base de datos MariaDB
      community.mysql.mysql_db:
        name: "{{ db_nombre }}"
        state: present
        login_user: root
        login_password: root

    - name: 2. Crear el usuario de la base de datos
      community.mysql.mysql_user:
        name: "{{ db_usuario }}"
        password: "{{ db_pass }}"
        priv: "{{ db_nombre }}.*:ALL"
        host: localhost
        state: present
        login_user: root
        login_password: root

    # --- Las tareas de archivos son específicas para Drupal ---
    - name: 3. Crear el directorio raíz para Drupal
      ansible.builtin.file:
        path: "{{ base_dir }}"
        state: directory
        owner: "{{ web_user }}"
        group: "{{ web_user }}"
        mode: '0755'
      become: yes

    - name: 4. Descargar y descomprimir Drupal
      become: yes
      ansible.builtin.unarchive:
        src: "https://ftp.drupal.org/files/projects/drupal-{{ drupal_version }}.tar.gz"
        dest: "{{ base_dir }}"
        remote_src: yes
        extra_opts: [--strip-components=1]

    - name: 5. Crear el archivo settings.php a partir del default
      ansible.builtin.copy:
        src: "{{ base_dir }}/sites/default/default.settings.php"
        dest: "{{ base_dir }}/sites/default/settings.php"
        remote_src: yes # Importante: indica que el origen está en la máquina remota
        owner: "{{ web_user }}"
        group: "{{ web_user }}"
        mode: '0644' # Lo hacemos legible y escribible para el propietario
      become: yes

    - name: 6. Añadir la configuración de la base de datos y el hash_salt a settings.php
      ansible.builtin.blockinfile:
        path: "{{ base_dir }}/sites/default/settings.php"
        block: |
          $databases['default']['default'] = [
            'database' => '{{ db_nombre }}',
            'username' => '{{ db_usuario }}',
            'password' => '{{ db_pass }}',
            'host' => 'localhost',
            'port' => '3306',
            'driver' => 'mysql',
            'prefix' => '',
            'collation' => 'utf8mb4_general_ci',
          ];
          $settings['hash_salt'] = '{{ drupal_hash_salt }}';
        marker: "# CONFIGURACIÓN AÑADIDA POR ANSIBLE"
      become: yes # Se ejecuta como el usuario que corre el playbook, que tiene permisos sobre el archivo

    - name: 7. Crear el directorio de archivos de Drupal y dar permisos
      ansible.builtin.file:
        path: "{{ base_dir }}/sites/default/files"
        state: directory
        owner: "{{ web_user }}"
        group: "{{ web_user }}"
        mode: '0775' # Permisos de escritura para el instalador
      become: yes

    - name: 8. Asegurar que todos los archivos pertenezcan al usuario web (final)
      ansible.builtin.file:
        path: "{{ base_dir }}"
        state: directory
        owner: "{{ web_user }}"
        group: "{{ web_user }}"
        recurse: yes
      become: yes
